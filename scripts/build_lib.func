
# vim: tabstop=4 fileformat=unix fileencoding=utf-8 filetype=sh

# license: Apatche v2.0

export XLIBRARY_SOURCES=${XLOCAL}/src
export XLIBRARY_ARCHIVES=${XLOCAL}/archives
export XLIBRARY_TEMP=${XLOCAL}/src/build

find_archive() {
local directory=$1
local base
local tail
local name
	shift
	for base in "$1" `echo "$1" | sed -e's/-/_/' -e's/\$/.orig/'`
	do
		for tail in tar.gz tgz tar.bz2 tar.xz tar.lzma zip 7z
		do 
			name="${base}.${tail}"
			if [ -f "${directory}/${name}" ]
			then
				echo "${name}"
				return 0
			fi
		done
	done
	return 1
}

expand_archive() {
local SEVENZIPCMD="7z"
local TARCMD="tar"
local UNZIPCMD="unzip"
	local NAME=$1
	case "${NAME}" in
	*.7z)
		${SEVENZIPCMD} -y x "${NAME}"
		;;
	*.tar.xz)
		${TARCMD} -Jxf "${NAME}"
		;;
	*.tar.lzma)
		${TARCMD} --lzma -xf "${NAME}"
		;;
	*.tar.bz2)
		${TARCMD} -jxf "${NAME}"
		;;
	*.tar.gz|*.tgz)
		${TARCMD} -zxf "${NAME}"
		;;
	*.zip)
		${UNZIPCMD} "${NAME}"
		;;
	*) 
		echo "error: unsupported archive '${NAME}'"
		return 1
		;;
	esac
	return $?
}

pack_archive() {
local NAME=$1
local DIR="manifest"
local MFT="${DIR}/${NAME}.mft"
local SEVENZIPCMD="7z"
local TARCMD="tar"
local XZCMD="xz"
local ARCSUFFIX_7ZIP=".7z"
local ARCSUFFIX_TARXZ=".xz"
	shift &&
	mkdir -p "${DIR}" &&
#	find "$@" > "${MFT}" &&
	rm -f "${MFT}" &&
	(for f in "$@"; do
		find ${f} >> "${MFT}"
	done)
	if [ ! \( -s "${MFT}" \) ]; then return 1; fi
	echo "${MFT}" >> "${MFT}" &&
	case "${NAME}" in
	*.tar)
		${TARCMD} -c "$@" "${MFT}" | ${XZCMD} -z -9 > "${NAME}${ARCSUFFIX_TARXZ}"
		;;
	*)
		${SEVENZIPCMD} a "${NAME}${ARCSUFFIX_7ZIP}" -mmt -mx9 -l "$@" "${MFT}"
		;;
	esac
	return $?
}

store_packed_archive() {
local NAME=$1
local ARCSUFFIX_7ZIP=".7z"
local ARCSUFFIX_TARXZ=".xz"
	case "${NAME}" in
	*.tar)
		mv "${NAME}${ARCSUFFIX_TARXZ}" "${XLIBRARY_ARCHIVES}/."
		;;
	*)
		mv "${NAME}${ARCSUFFIX_7ZIP}" "${XLIBRARY_ARCHIVES}/."
		;;
	esac
	return $?
}

patch_debian() {
local patch_archive=$1
local patches_dir="debian/patches"
	expand_archive "${patch_archive}" &&
	for fl in `cat ${patches_dir}/series`
	do
		patch --batch --quiet --ignore-whitespace --forward -p 1 -i ${patches_dir}/${fl}
	done
}

patch_adhoc() {
	patch --batch --ignore-whitespace --forward "$@"
}



