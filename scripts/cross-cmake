#!/bin/bash
# vim: tabstop=4 fileformat=unix fileencoding=utf-8 filetype=sh

# license: Apache v2.0

export CONFIG_SHELL

#PREFIX=/usr/xmingw/xmingw32
PREFIX=`dirname "$0"`
if [ "" = "${XMINGW}" ]
then
  . "${PREFIX}/scripts/env.sh"
fi
PREFIX="${XMINGW}"
. "${PREFIX}/scripts/cross.env"
. "${PREFIX}/scripts/cross.exp"

cmake_toolchain_file="./cmake_toolchain_file.cmake"
library_directories=`echo ${XMINGW_LIBRARY_ROOT}|sed -e 's/:/ /g'`

cat << EOS > "${cmake_toolchain_file}"
SET(CMAKE_CACHEFILE_DIR "${PWD}")

# the name of the target operating system
SET(CMAKE_SYSTEM_NAME Windows)

# which compilers to use for C and C++
SET(CMAKE_C_COMPILER ${TARGET}-gcc)
SET(CMAKE_CXX_COMPILER ${TARGET}-g++)
SET(CMAKE_RC_COMPILER ${TARGET}-windres)

# here is the target environment located
#SET(CMAKE_FIND_ROOT_PATH  /usr/i586-mingw32msvc )
SET(CMAKE_FIND_ROOT_PATH ${library_directories})

# adjust the default behaviour of the FIND_XXX() commands:
# search headers and libraries in the target environment, search 
# programs in the host environment
set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)

#SET(CMAKE_C_FLAGS "")
#SET(CMAKE_CXX_FLAGS "")
#SET(CMAKE_BUILD_TYPE RELEASE)
#SET(CMAKE_C_FLAGS_RELEASE "")
#SET(CMAKE_CXX_FLAGS_RELEASE "")
#SET(CMAKE_EXE_LINKER_FLAGS "")
#SET(CMAKE_MODULE_LINKER_FLAGS "")
#SET(CMAKE_SHARED_LINKER_FLAGS "")
EOS

dir=""
case "$0" in
*-ppcmake)
    dir=".."
    ;;
esac

cache="${PWD}/CMakeCache.txt"
rm -f "${cache}"
cmake "${dir}" -DCMAKE_CROSSCOMPILING:BOOL=true -DCMAKE_VERBOSE_MAKEFILE:BOOL=true -DCMAKE_TOOLCHAIN_FILE=${cmake_toolchain_file} "$@"
status=$?
# rm "${cmake_toolchain_file}"
exit ${status}

